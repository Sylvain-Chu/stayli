generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model Property {
  id          String    @id @default(uuid())
  name        String
  address     String?
  description String?
  bookings    Booking[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Client {
  id        String    @id @default(uuid())
  firstName String
  lastName  String
  email     String    @unique
  phone     String?
  bookings  Booking[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Booking {
  id         String   @id @default(uuid())
  startDate  DateTime
  endDate    DateTime
  totalPrice Float
  cleaningFee Float    @default(0)
  taxes      Float     @default(0)
  adults     Int       @default(1)
  children   Int       @default(0)
  specialRequests String?
  discount   Float     @default(0)
  discountType String? // 'amount' ou 'percent'
  status     BookingStatus @default(confirmed)
  propertyId String
  property   Property @relation(fields: [propertyId], references: [id])
  clientId   String
  client     Client   @relation(fields: [clientId], references: [id])
  invoice    Invoice?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([propertyId, startDate, endDate])
}

enum BookingStatus {
  confirmed
  pending
  cancelled
  blocked
}

model Invoice {
  id            String   @id @default(uuid())
  invoiceNumber String   @unique @default(dbgenerated("concat('INV-', to_char(now(), 'YYYYMMDD'), '-', lpad(nextval('invoice_seq')::text, 4, '0'))"))
  issueDate     DateTime @default(now())
  dueDate       DateTime
  amount        Float
  status        InvoiceStatus @default(draft)
  bookingId     String   @unique
  booking       Booking  @relation(fields: [bookingId], references: [id])
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

enum InvoiceStatus {
  draft
  sent
  paid
  overdue
  cancelled
}

model User {
  id           String   @id @default(uuid())
  name         String?
  email        String   @unique
  passwordHash String
  role         Role     @default(USER)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Settings {
  id                                   String   @id @default(uuid())
  companyName                          String   @default("Vacation Rentals")
  companyAddress                       String?
  companyPhoneNumber                   String?
  companyEmail                         String?
  companyLogoUrl                       String?
  defaultLanguage                      String   @default("fr")
  currencyCode                         String   @default("EUR")
  currencySymbol                       String   @default("â‚¬")
  lowSeasonMonths                      Int[]    @default([1, 2, 3, 11, 12])
  lowSeasonRate                        Float    @default(750)
  highSeasonRate                       Float    @default(830)
  linensOptionPrice                    Float    @default(20)
  cleaningOptionPrice                  Float    @default(35)
  touristTaxRatePerPersonPerDay        Float    @default(1)
  invoicePrefix                        String   @default("INV-")
  invoiceDueDays                       Int      @default(30)
  invoicePaymentInstructions           String?
  cancellationInsurancePercentage      Float    @default(6)
  cancellationInsuranceProviderName    String   @default("Holiday Peace of Mind Insurance")
  createdAt                            DateTime @default(now())
  updatedAt                            DateTime @updatedAt
}
