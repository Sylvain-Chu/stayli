name: CI

on: [pull_request]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: stayli_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - '5432:5432'
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
          --health-start-period=30s

    env:
      NODE_ENV: test
      SESSION_SECRET: test-secret
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/stayli_test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'
          cache-dependency-path: |
            **/yarn.lock

      - name: Enable Corepack (Yarn)
        run: corepack enable

      - name: Install dependencies
        run: |
          yarn install --frozen-lockfile || yarn install

      - name: Wait for Postgres to be ready
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client
          ATTEMPTS=0
          until pg_isready -h localhost -p 5432 -U postgres; do
            ATTEMPTS=$((ATTEMPTS+1))
            if [ "$ATTEMPTS" -ge 60 ]; then
              echo "Postgres did not become ready after 120s"
              # Print docker containers for debugging
              docker ps || true
              exit 1
            fi
            echo "Waiting for postgres..."
            sleep 2
          done

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Apply database migrations
        run: npx prisma migrate deploy

      - name: Lint
        run: yarn lint

      - name: Build
        run: yarn build

      - name: Test
        run: yarn test --ci --runInBand